"""
Django settings for day01 project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hk#7)pal_li@d)+7hgmj_moux5ctfu1cn)60wzp*-az&i57s)n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    # 如果存储在数据库中，需要在项INSTALLED_APPS中安装Session应用。
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 安装第一个app,也就是所说的注册子应用
    'users.apps.UsersConfig',
    'request_response.apps.RequestResponseConfig',
]

# session存储在数据库当中，如下设置可以写，也可以不写，这是默认存储方式。
# 数据库，默认存储
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'
# 本地存储
# SESSION_ENGINE='django.contrib.sessions.backends.cache'
# # 混合存储
# SESSION_ENGINE='django.contrib.sessions.backends.cached_db'

# 在redis中保存session，需要引入第三方扩展，我们可以使用django-redis来解决
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# 设置session储存的位置（这里设施的色死哦你存储到缓存中，面已经把缓存改成了redis，所以session信息就会存储到redis中)）
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
# 指定session信息存储的缓存中的那个小空间中
SESSION_CACHE_ALIAS = "default"

# 这里需要对redis进行配置
# sudo vim /etc/redis/redis.conf
# sudo service redis-server restart

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Django项目默认启用Session
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'day01.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'day01.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'

LANGUAGE_CODE = 'zh-hans'
# 这两行代码设置语言
TIME_ZONE = 'Asia/Shanghai'



USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
# 指定项目中访问静态文件的url地址的前缀
STATIC_URL = '/static/'

# 指定Django项目中存放的静态文件，相当于Flask中的static_folder
STATICFILE_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
